<article id="cart" class="page-cart-new">
{% section 'cart-template' %}
{% section 'cart-relations' %}
<section id="submitLoader" class="comp-submit-loader">
	<div class="height_adjust"></div>
	<div class="loader_inner">
		<span class="loader"></span>
		<p class="loader_txt">ご注文を処理中です。しばらくお待ちください。</p>
	</div><!-- loader_inner -->
</section>
</article>



<script type='text/javascript'>
/* アトリビュート保存用 */
var cartAttributes = {{ cart | json }};
var deliveryDateParam = cartAttributes.attributes['配送希望日:'];
var deriveryTimeParam = cartAttributes.attributes['配送時間帯:'];
var omotegakiParam = cartAttributes.attributes['熨斗の表書き:'];
var naireParam = cartAttributes.attributes['熨斗の名入れ:'];
var messageParam = cartAttributes.attributes['メッセージカードの内容:'];
var noteParam = cartAttributes.note;


/* カートに戻った際にアトリビュートの値を維持 */
if(omotegakiParam != undefined){
  $('#noshiType').val(omotegakiParam);
}
if(naireParam != undefined){
  $('#noshiName').val(naireParam);
}
if(messageParam != undefined){
  $('#messeageCard').val(messageParam);
}
if(deriveryTimeParam != undefined){
  $('#deliveryTime').val(deriveryTimeParam);
}

if(noteParam != undefined){
  $('#CartSpecialInstructions').val(noteParam);
}



function controllProductQuantity(target){
  var minusButton = [];
  var plusButton = [];
  var quantityInput = [];
  var reloadButton = [];
  var quantityNum;

  function controllQuantity(num, vector){
    quantityNum = quantityInput[num].val();
    if(vector == 1){
      quantityInput[num].attr('value', Number(quantityNum) + 1);
      reloadButton[num].click();
    }else{
      if(quantityNum != 1){
        quantityInput[num].attr('value', Number(quantityNum) - 1);
        reloadButton[num].click();
      }
    }
  }

  function init(){
    $.each(target.find('.cart_item'), function(index) {
      minusButton[index] = $(this).find('.minus');
      plusButton[index] = $(this).find('.plus');
      quantityInput[index] = $(this).find('input[type="number"]');
      reloadButton[index] = $(this).find('.reload_button');
      minusButton[index].on({
        'click': function() {
          event.preventDefault();
          controllQuantity(index, -1);
        }
      });
      plusButton[index].on({
        'click': function() {
          event.preventDefault();
          controllQuantity(index, 1);
        }
      });
    });
  }

  init();

}

if (document.getElementById('cart')) {
  controllProductQuantity($('#cartItem'));
}

function setHistoryBackLink(){
  var ref = document.referrer;
  if ( ref.match(/collections/)) {

  }else if(ref.match(/products/)){

  }else{
    $('#backLink').attr('href', '/');
  }
}

setHistoryBackLink();

function cartOptionController(target){
  var dayFlag = 0;
  var firstDay;
	var firstDayParam;
	var secondDay;
	var secondDayParam;
	var dayNumber = 0;
  var deliveryDateList = $('#deliveryDateList');
  var optionItem = [];
  var optionItemHeight = [];
  var optionItemLabel = [];
  var optionItemWrap = [];
  var delay = 0; /*曜日・時間による配送日のスライド設定*/
  var today = new Date();
  var startDay;
  var y;
  var m;
  var paramM;
  var d;
  var paramD;
  var w;
  var paramW;
  var time;
  var num;
  var testFlg = Number(0);
  var correctDate = ['指定なし'];
  var wd = ['日', '月', '火', '水', '木', '金', '土'];
  var holiday = ['12/29', '12/30', '12/31', '1/1', '1/2', '1/3', '1/4', '1/10', '2/11', '2/23', '3/21', '4/29','4/30', '5/1', '5/2', '5/3', '5/4', '5/5', '7/18', '8/11', '9/19', '9/23', '10/10', '11/3', '11/23'];
  var setDayStatus = 0;
  var deliveryDate = $('#deliveryDate');
  var deliveryTime = $('#deliveryTime');
  var messageCard = $('textarea[name="messeage_card"]');



  function setMessageCardVal(){
    var messageTxt = messageCard.val();
    if(messageTxt != undefined){
      $('#messageCartContent').text(messageTxt);
    }
  }

  function getDayDisplay(day, mode, flg){
    var date = new Date();
    date.setDate(date.getDate() + day + testFlg);
    y = date.getFullYear();
    m = date.getMonth() + 1;
    d = date.getDate();
    w = date.getDay() % 7;
    time = date.getHours();
    if(m < 10){ paramM = '0' + m }else{ paramM = m }
    if(d < 10){ paramD = '0' + d }else{ paramD = d }
    var dayParam = y + '-' + paramM + '-' + paramD;
    var dayDisplay = m + '月' + d + '日' + '(' + wd[w] + ')';
    if(mode == 0){
			if(dayNumber == 0){
				deliveryDate.append('<option value="' + dayParam + '">' + dayDisplay + ' ※一部地域のみ</option>');
				firstDay = dayDisplay;
				firstDayParam = dayParam;
				dayNumber = dayNumber + 1;
			}else{
				if(dayNumber == 1){
					secondDay = dayDisplay;
					secondDayParam = dayParam;
					$('#secondDay').text(secondDay);
				}
				deliveryDate.append('<option value="' + dayParam + '">' + dayDisplay + '</option>');
				dayNumber = dayNumber + 1;
			}
    }else if(mode == 1){
    if(flg == 1){
			firstDay = dayDisplay;
      console.log('firstDay:' + firstDay);
    }
    correctDate.push(dayParam);
  }
  console.log('deliveryDateParam:' + deliveryDateParam);
  if(deliveryDateParam != undefined){
    $('#deliveryDate').val(deliveryDateParam);
  }
}

function setDayDisplay(num, mode){
  console.log('num:'+ num + '/' + 'mode:' + mode);
  var startSet = Number(num) + Number(2);
  for (var i= startSet; i<30; i++) {
    if(mode == 1){
      dayFlag = dayFlag + 1;
    }
    getDayDisplay(i, mode, dayFlag);
  }
  var selectDate = deliveryDate.val();
	deliveryDate.on({
		'change': function() {
			if(deliveryDate.val() == firstDayParam){
			var result = window.confirm('【四国/中国/九州地方・和歌山・秋田・青森・北海道・沖縄】へ配送される場合は' + secondDay + 'が最短の配送日となります。\n' + firstDay + 'を配送指定日にしますか？');
				if( result ) {

				}else {
					deliveryDate.val(secondDayParam);
				}
			}
			$('#dateInput').val(deliveryDate.val());
		}
	});
  if(mode == 1){
    var checkDateLabel = correctDate.includes(selectDate);
    if(checkDateLabel || selectDate == '指定なし' || selectDate == undefined){
      $('#submitLoader').addClass('open');
    }else{
      event.preventDefault();
      alert('最短配送日時は' + firstDay + 'となります。申し訳ございませんが、配送指定日を再度選択お願いします。');
    }
  }
}

function setShippingDay2(delay, mode){
  today.setDate(today.getDate() + 1);
  var todayY = today.getFullYear();
  var todayM = today.getMonth() + 1;
  var todayD = today.getDate();
  var todayW = today.getDay() % 7;
  var dayTime = today.getHours();
  var todayDate = todayM + '/' + todayD;
  if(todayDate){
    if($.inArray(todayDate,holiday) != -1){
      delay = delay + 1;
      setShippingDay2(delay, mode);
    }else{
      setDayDisplay(delay, mode);
    }
  }
}

function setShippingDay(mode){
  today.setDate(today.getDate() + testFlg);
  var dayTime = today.getHours();
  var todayW = today.getDay() % 7;
  if(dayTime < 10){ /* 10時までの注文の場合 */
    if(todayW == 0){ /* 日曜日の場合 */
      setShippingDay2(1,mode) /* 配送を月曜日にする*/
    }else if(todayW == 6){ /* 土曜日の場合*/
      setShippingDay2(2,mode); /* 配送を月曜日にする*/
    }else{ /*月~金曜日の注文の場合*/
      setShippingDay2(0,mode); /*当日に配送する*/
    }
  }else{ /* 10時以降の注文の場合 */
    if(todayW == 6){ /* 土曜日の場合*/
      setShippingDay2(2,mode);/* 配送を月曜日にする*/
    }else if(todayW == 5){ /* 金曜日の場合*/
      setShippingDay2(3,mode);/* 配送を月曜日にする*/
    }else{ /*月~木曜日の注文の場合*/
      setShippingDay2(1,mode);/*翌日に配送する*/
    }
  }
}


function init(){
  $.each(target.find('.comp-admin-button input'), function(index) {
    $(this).on({
      'click': function() {
        setShippingDay(1);
      }
    });
  });

  setShippingDay(0);

}

init();

}

if (document.getElementById('cart')) {
cartOptionController($('article'));
}


</script>
