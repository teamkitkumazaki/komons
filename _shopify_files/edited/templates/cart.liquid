{%- for item in cart.items -%}
  {% if item.selling_plan_allocation.selling_plan.name contains '定期'  %}
    {%- assign subProperty = subProperty | plus : 1 -%}
  {%- else -%}
    {%- assign normalProperty = normalProperty | plus : 1 -%}
  {%- endif -%}
{%- endfor -%}
<article id="cart" class="page-cart-new">
{% section 'cart-template' %}
{% section 'cart-relations' %}
<section id="submitLoader" class="comp-submit-loader">
	<div class="height_adjust"></div>
	<div class="loader_inner">
		<span class="loader"></span>
		<p class="loader_txt">ご注文を処理中です。しばらくお待ちください。</p>
	</div><!-- loader_inner -->
</section>
</article>

<div id="subscriptionModal" class="comp-subscription-modal small">
	<div id="subscriptionModalBg" class="pop_bg"></div>
	<div class="subpop_inner">
		<div class="subpop_contents">
			<div class="subpop_desc">
				<p>定期購入商品は、通常購入商品との同梱発送が不可となります。恐れ入りますが、カートの内容を修正の上ご購入ください。</p>
				<div class="pop_close2">
					<button id="subscriptionPopButton">閉じる</button>
				</div>
			</div>
		</div>
	</div><!-- subpop_inner -->
</div><!-- comp-subscription-modal -->

{% if subProperty > 0 and normalProperty > 0 %}
<script type='text/javascript'>
console.log('subPopDisplay');
function subPopDisplay(){
	var subscriptionPopButton = $('#subscriptionPopButton');
	var subscriptionModal = $('#subscriptionModal');
	var subscriptionModalBg = $('#subscriptionModalBg');

	function init(){
		subscriptionPopButton.on({
			'click': function() {
				event.preventDefault();
				subscriptionModal.addClass('open');
			}
		});
		subscriptionModalBg.on({
			'click': function() {
				subscriptionModal.removeClass('open');
			}
		});
		setTimeout(function() {
			subscriptionModal.addClass('open');
      console.log(subscriptionModal);
		}, 1000);
	}

	init();

}

subPopDisplay();

</script>

{%- endif -%}


<script type='text/javascript'>
$.each($('article').find('.comp-admin-button'), function(index) {
	$(this).find('input').on({
		'click': function() {
			console.log('checkout');
			$('#submitLoader').addClass('open');
		}
	});
});

/* アトリビュート保存用 */
var cartAttributes = {{ cart | json }};
var deliveryDateParam = cartAttributes.attributes['配送希望日:'];
var deriveryTimeParam = cartAttributes.attributes['配送時間帯:'];
var omotegakiParam = cartAttributes.attributes['熨斗の表書き:'];
var naireParam = cartAttributes.attributes['熨斗の名入れ:'];
var messageParam = cartAttributes.attributes['メッセージカードの内容:'];
var noteParam = cartAttributes.note;


/* カートに戻った際にアトリビュートの値を維持 */
if(omotegakiParam != undefined){
  $('#noshiType').val(omotegakiParam);
}
if(naireParam != undefined){
  $('#noshiName').val(naireParam);
}
if(messageParam != undefined){
  $('#messeageCard').val(messageParam);
}
if(deriveryTimeParam != undefined){
  $('#deliveryTime').val(deriveryTimeParam);
}
if(deliveryDateParam != undefined){
	$('#deliveryDateBox').val(deliveryDateParam);
	var dateValue = $('#deliveryDateBox').val();
	if(dateValue != null || dateValue != undefined){
		$('#dateInput').val(dateValue);
	}else{
		$('#deliveryDateBox').val('指定なし');
		$('#dateInput').val('指定なし');
	}

}
if(noteParam != undefined){
  $('#CartSpecialInstructions').val(noteParam);

}



function controllProductQuantity(target){
  var minusButton = [];
  var plusButton = [];
  var quantityInput = [];
  var reloadButton = [];
  var quantityNum;

  function controllQuantity(num, vector){
    quantityNum = quantityInput[num].val();
    if(vector == 1){
      quantityInput[num].attr('value', Number(quantityNum) + 1);
      reloadButton[num].click();
    }else{
      if(quantityNum != 1){
        quantityInput[num].attr('value', Number(quantityNum) - 1);
        reloadButton[num].click();
      }
    }
  }

  function init(){
    $.each(target.find('.cart_item'), function(index) {
      minusButton[index] = $(this).find('.minus');
      plusButton[index] = $(this).find('.plus');
      quantityInput[index] = $(this).find('input[type="number"]');
      reloadButton[index] = $(this).find('.reload_button');
      minusButton[index].on({
        'click': function() {
          event.preventDefault();
          controllQuantity(index, -1);
        }
      });
      plusButton[index].on({
        'click': function() {
          event.preventDefault();
          controllQuantity(index, 1);
        }
      });
    });
  }

  init();

}

if (document.getElementById('cart')) {
  controllProductQuantity($('#cartItem'));
}

function setHistoryBackLink(){
  var ref = document.referrer;
  if ( ref.match(/collections/)) {

  }else if(ref.match(/products/)){

  }else{
    $('#backLink').attr('href', '/');
  }
}

setHistoryBackLink();


</script>
